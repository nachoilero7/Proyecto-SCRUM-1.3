/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Nacho
 */
public class CrearGrafo extends javax.swing.JFrame {

    /**
     * Creates new form CrearGrafo
     */
    public CrearGrafo() {
        initComponents();
        this.setLocationRelativeTo(null);
        setResizable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CrearNodo = new javax.swing.JButton();
        EliminarNodo = new javax.swing.JButton();
        ActualizarNodo = new javax.swing.JButton();
        AgregarAtributo = new javax.swing.JButton();
        EliminarAtributo = new javax.swing.JButton();
        ActualizarAtributo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 34), new java.awt.Dimension(2, 34), new java.awt.Dimension(32767, 34));
        CrearArco = new javax.swing.JButton();
        EliminarArco = new javax.swing.JButton();
        ActualizarArco = new javax.swing.JButton();
        AgregarAtributoArco = new javax.swing.JButton();
        EliminarAtributoArco = new javax.swing.JButton();
        ActualizarAtributoArco = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jMenuBar1 = new javax.swing.JMenuBar();
        Archivo = new javax.swing.JMenu();
        Importar = new javax.swing.JMenuItem();
        Exportar = new javax.swing.JMenuItem();
        Limpiar = new javax.swing.JMenuItem();
        Salir = new javax.swing.JMenuItem();
        VisualizarGrafo = new javax.swing.JMenu();
        Salir2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CrearNodo.setText("Crear Nodo");

        EliminarNodo.setText("Eliminar Nodo");

        ActualizarNodo.setText("Actualizar Nodo");

        AgregarAtributo.setText("Agregar Atributo");

        EliminarAtributo.setText("Eliminar Atributo");

        ActualizarAtributo.setText("Actualizar Atributo");

        jLabel1.setText("LISTA DE NODOS:");

        filler1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        CrearArco.setText("Crear Arco");

        EliminarArco.setText("Eliminar Arco");

        ActualizarArco.setText("Actualizar Arco");
        ActualizarArco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarArcoActionPerformed(evt);
            }
        });

        AgregarAtributoArco.setText("Agregar Atributo Arco");

        EliminarAtributoArco.setText("Eliminar Atributo Arco");

        ActualizarAtributoArco.setText("Atualizar Atributo Arco");

        jLabel2.setText("LISTA DE ARCOS:");

        jScrollPane3.setViewportView(jList1);

        jScrollPane1.setViewportView(jList2);

        Archivo.setText("Archivo");

        Importar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        Importar.setText("Importar Grafo");
        Importar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportarActionPerformed(evt);
            }
        });
        Archivo.add(Importar);

        Exportar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        Exportar.setText("Exportar Grafo");
        Exportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportarActionPerformed(evt);
            }
        });
        Archivo.add(Exportar);

        Limpiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        Limpiar.setText("Limpiar");
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });
        Archivo.add(Limpiar);

        Salir.setText("Salir");
        Salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SalirMouseClicked(evt);
            }
        });
        Archivo.add(Salir);

        jMenuBar1.add(Archivo);

        VisualizarGrafo.setText("Visualizar Grafo");
        VisualizarGrafo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VisualizarGrafoActionPerformed(evt);
            }
        });
        jMenuBar1.add(VisualizarGrafo);

        Salir2.setText("Salir");
        Salir2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Salir2MouseClicked(evt);
            }
        });
        jMenuBar1.add(Salir2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(EliminarNodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CrearNodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ActualizarNodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AgregarAtributo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EliminarAtributo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ActualizarAtributo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ActualizarAtributoArco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EliminarAtributoArco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AgregarAtributoArco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ActualizarArco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EliminarArco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CrearArco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 44, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CrearNodo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EliminarNodo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ActualizarNodo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AgregarAtributo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EliminarAtributo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ActualizarAtributo)
                                        .addGap(84, 84, 84))
                                    .addComponent(jScrollPane3)))
                            .addComponent(filler1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CrearArco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EliminarArco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ActualizarArco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AgregarAtributoArco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EliminarAtributoArco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ActualizarAtributoArco)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportarActionPerformed
        //Aca tendriamos que cargar el grafo
        
        //Creo el objeto JFileChooser
        JFileChooser fc = new JFileChooser();
        //Permitir seleccionar varios ficheros
        fc.setMultiSelectionEnabled(true);
        //Que se puede seleccionar
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        //Creo el filtro de extencion
        //String[] ext = new String[]{".txt",".exp"};
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("TXT - EXP", "txt","exp");
        //Le indio el filtro
        fc.setFileFilter(filtro);
        //Abrir la ventana y guardar la opcion seleccionada por el usuario
        int seleccion = fc.showOpenDialog(this);
        //Si el usuario acepta
        if(seleccion == JFileChooser.APPROVE_OPTION){
            //Seleccionamos los ficheros
            File[] ficheros = fc.getSelectedFiles();
            for (File fichero : ficheros) {
                //Aca se deberia cargar cada cosa en su lugar para mostrar por pantalla
            }
        }
    }//GEN-LAST:event_ImportarActionPerformed

    private void ExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportarActionPerformed
        try{
            //
            JFileChooser fc = new JFileChooser();
            fc.showSaveDialog(this);
            File guarda = fc.getSelectedFile();
            if(guarda != null){
                FileWriter save = new FileWriter(guarda + ".txt");
                /*
                
                */
                save.write("lo que se necesite guardar");
                save.close();
                JOptionPane.showMessageDialog(null,
                    "El archivo se a guardado Exitosamente",
                    "Información",JOptionPane.INFORMATION_MESSAGE);
                }
        }
        catch(IOException ex){
            JOptionPane.showMessageDialog(null,
                "Su archivo NO se ha guardado",
                "Advertencia",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_ExportarActionPerformed

    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        new CrearGrafo().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LimpiarActionPerformed

    private void SalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalirMouseClicked
        System.exit(0);
    }//GEN-LAST:event_SalirMouseClicked

    private void Salir2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Salir2MouseClicked
        System.exit(0);
    }//GEN-LAST:event_Salir2MouseClicked

    private void VisualizarGrafoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VisualizarGrafoActionPerformed
        ImagenGrafo ig = new ImagenGrafo();
        ig.setVisible(true);
    }//GEN-LAST:event_VisualizarGrafoActionPerformed

    private void ActualizarArcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarArcoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ActualizarArcoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearGrafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearGrafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearGrafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearGrafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearGrafo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActualizarArco;
    private javax.swing.JButton ActualizarAtributo;
    private javax.swing.JButton ActualizarAtributoArco;
    private javax.swing.JButton ActualizarNodo;
    private javax.swing.JButton AgregarAtributo;
    private javax.swing.JButton AgregarAtributoArco;
    private javax.swing.JMenu Archivo;
    private javax.swing.JButton CrearArco;
    private javax.swing.JButton CrearNodo;
    private javax.swing.JButton EliminarArco;
    private javax.swing.JButton EliminarAtributo;
    private javax.swing.JButton EliminarAtributoArco;
    private javax.swing.JButton EliminarNodo;
    private javax.swing.JMenuItem Exportar;
    private javax.swing.JMenuItem Importar;
    private javax.swing.JMenuItem Limpiar;
    private javax.swing.JMenuItem Salir;
    private javax.swing.JMenu Salir2;
    private javax.swing.JMenu VisualizarGrafo;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}

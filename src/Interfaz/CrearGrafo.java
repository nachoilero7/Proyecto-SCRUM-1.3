/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.bson.Document;
import scrum.Arco;
import scrum.Client;
import scrum.Export;
import scrum.Import;
import scrum.Nodo;

/**
 *
 * @author Nacho
 */
public class CrearGrafo extends javax.swing.JFrame {
    
    public Client mongo = new Client("localhost",27017,"test");

    /**
     * Creates new form CrearGrafo
     */
    public CrearGrafo() throws IOException {
        //Import i = new Import(mongo, "d:GrafoExport.txt");
        //Export e = new Export(mongo,"d:");
        initComponents();
        this.setLocationRelativeTo(null);
        setResizable(false);
        updateViewNodos();
        updateViewArco();
       
      
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        CrearNodo = new javax.swing.JButton();
        EliminarNodo = new javax.swing.JButton();
        AgregarAtributo = new javax.swing.JButton();
        EliminarAtributo = new javax.swing.JButton();
        ActualizarAtributo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 34), new java.awt.Dimension(2, 34), new java.awt.Dimension(32767, 34));
        CrearArco = new javax.swing.JButton();
        EliminarArco = new javax.swing.JButton();
        AgregarAtributoArco = new javax.swing.JButton();
        EliminarAtributoArco = new javax.swing.JButton();
        ActualizarAtributoArco = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        TemaCrearNodo = new javax.swing.JTextField();
        TemaEliminarNodo = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        AtributoAgregarAtributo = new javax.swing.JTextField();
        ValorAgregarAtributo = new javax.swing.JTextField();
        AtributoEliminarAtributo = new javax.swing.JTextField();
        AtributoActualizarAtributo = new javax.swing.JTextField();
        NuevoValorActualizarAtributo = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        AtributoAgregarAtributoArco = new javax.swing.JTextField();
        ValorAgregarAtributoArco = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        AtributoEliminarAtributoArco = new javax.swing.JTextField();
        jSeparator10 = new javax.swing.JSeparator();
        AtributoActualizarAtributoArco = new javax.swing.JTextField();
        NuevoValorActualizarAtributoArco = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaNodos = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListaArcos = new javax.swing.JTextArea();
        NameNodos1 = new javax.swing.JComboBox<>();
        NameNodos = new javax.swing.JComboBox<>();
        NameNodos2 = new javax.swing.JComboBox<>();
        addArcoNodo1 = new javax.swing.JComboBox<>();
        addArcoNodo2 = new javax.swing.JComboBox<>();
        deleteArco = new javax.swing.JComboBox<>();
        addAttrArco = new javax.swing.JComboBox<>();
        deleteAttrArco = new javax.swing.JComboBox<>();
        updateAttrArco = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        Archivo = new javax.swing.JMenu();
        Importar = new javax.swing.JMenuItem();
        Exportar = new javax.swing.JMenuItem();
        Limpiar = new javax.swing.JMenuItem();
        Salir = new javax.swing.JMenuItem();
        VerGrafo = new javax.swing.JMenu();
        Salir2 = new javax.swing.JMenu();

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar2.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CrearNodo.setText("Crear Nodo");
        CrearNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearNodoActionPerformed(evt);
            }
        });

        EliminarNodo.setText("Eliminar Nodo");
        EliminarNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarNodoActionPerformed(evt);
            }
        });

        AgregarAtributo.setText("Agregar Atributo");
        AgregarAtributo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarAtributoActionPerformed(evt);
            }
        });

        EliminarAtributo.setText("Eliminar Atributo");
        EliminarAtributo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarAtributoActionPerformed(evt);
            }
        });

        ActualizarAtributo.setText("Actualizar Atributo");
        ActualizarAtributo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarAtributoActionPerformed(evt);
            }
        });

        jLabel1.setText("LISTA DE NODOS:");

        filler1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        CrearArco.setText("Crear Arco");
        CrearArco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearArcoActionPerformed(evt);
            }
        });

        EliminarArco.setText("Eliminar Arco");
        EliminarArco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarArcoActionPerformed(evt);
            }
        });

        AgregarAtributoArco.setText("Agregar Atributo Arco");
        AgregarAtributoArco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarAtributoArcoActionPerformed(evt);
            }
        });

        EliminarAtributoArco.setText("Eliminar Atributo Arco");
        EliminarAtributoArco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarAtributoArcoActionPerformed(evt);
            }
        });

        ActualizarAtributoArco.setText("Actualizar Atributo Arco");
        ActualizarAtributoArco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarAtributoArcoActionPerformed(evt);
            }
        });

        jLabel2.setText("LISTA DE ARCOS:");

        TemaCrearNodo.setText("Tema");
        TemaCrearNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TemaCrearNodoActionPerformed(evt);
            }
        });

        TemaEliminarNodo.setText("Tema");

        AtributoAgregarAtributo.setText("Atributo");

        ValorAgregarAtributo.setText("Valor");

        AtributoEliminarAtributo.setText("Atributo");

        AtributoActualizarAtributo.setText("Atributo");

        NuevoValorActualizarAtributo.setText("Nuevo Valor");

        AtributoAgregarAtributoArco.setText("Atributo");

        ValorAgregarAtributoArco.setText("Valor");

        AtributoEliminarAtributoArco.setText("Atributo");

        AtributoActualizarAtributoArco.setText("Atributo");

        NuevoValorActualizarAtributoArco.setText("Nuevo Valor");

        ListaNodos.setColumns(20);
        ListaNodos.setRows(5);
        jScrollPane2.setViewportView(ListaNodos);

        ListaArcos.setColumns(20);
        ListaArcos.setRows(5);
        jScrollPane3.setViewportView(ListaArcos);

        NameNodos1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        NameNodos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameNodos1ActionPerformed(evt);
            }
        });

        NameNodos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        NameNodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameNodosActionPerformed(evt);
            }
        });

        NameNodos2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addArcoNodo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addArcoNodo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        deleteArco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addAttrArco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        deleteAttrArco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        updateAttrArco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Archivo.setText("Archivo");

        Importar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        Importar.setText("Importar Grafo");
        Importar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportarActionPerformed(evt);
            }
        });
        Archivo.add(Importar);

        Exportar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        Exportar.setText("Exportar Grafo");
        Exportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportarActionPerformed(evt);
            }
        });
        Archivo.add(Exportar);

        Limpiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        Limpiar.setText("Limpiar");
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });
        Archivo.add(Limpiar);

        Salir.setText("Salir");
        Salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SalirMouseClicked(evt);
            }
        });
        Archivo.add(Salir);

        jMenuBar1.add(Archivo);

        VerGrafo.setText("Ver Grafo");
        VerGrafo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VerGrafoMouseClicked(evt);
            }
        });
        VerGrafo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerGrafoActionPerformed(evt);
            }
        });
        jMenuBar1.add(VerGrafo);

        Salir2.setText("Salir");
        Salir2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Salir2MouseClicked(evt);
            }
        });
        jMenuBar1.add(Salir2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ActualizarAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(NameNodos2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AtributoActualizarAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NuevoValorActualizarAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(CrearNodo, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TemaCrearNodo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(AgregarAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(AtributoAgregarAtributo, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                                            .addComponent(NameNodos, 0, 103, Short.MAX_VALUE)
                                            .addComponent(ValorAgregarAtributo)))
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(EliminarNodo, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TemaEliminarNodo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(EliminarAtributo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(NameNodos1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(AtributoEliminarAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(18, 18, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                        .addGap(17, 17, 17)))
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EliminarArco, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteArco, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSeparator8)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(ActualizarAtributoArco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(EliminarAtributoArco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(AgregarAtributoArco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(NuevoValorActualizarAtributoArco, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                        .addComponent(AtributoActualizarAtributoArco)
                                        .addComponent(AtributoEliminarAtributoArco)
                                        .addComponent(ValorAgregarAtributoArco)
                                        .addComponent(AtributoAgregarAtributoArco)
                                        .addComponent(addAttrArco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(deleteAttrArco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(updateAttrArco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CrearArco, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addArcoNodo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addArcoNodo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 23, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(169, 169, 169))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filler1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(CrearArco)
                                    .addComponent(jLabel2)
                                    .addComponent(addArcoNodo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addArcoNodo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(EliminarArco)
                                            .addComponent(deleteArco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(AgregarAtributoArco)
                                            .addComponent(addAttrArco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AtributoAgregarAtributoArco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ValorAgregarAtributoArco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(EliminarAtributoArco)
                                            .addComponent(deleteAttrArco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AtributoEliminarAtributoArco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(ActualizarAtributoArco)
                                            .addComponent(updateAttrArco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AtributoActualizarAtributoArco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(NuevoValorActualizarAtributoArco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(CrearNodo)
                                    .addComponent(TemaCrearNodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(EliminarNodo)
                                            .addComponent(TemaEliminarNodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(NameNodos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(AtributoAgregarAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ValorAgregarAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(AgregarAtributo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(EliminarAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(NameNodos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27)
                                                .addComponent(AtributoEliminarAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ActualizarAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(NameNodos2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(AtributoActualizarAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(NuevoValorActualizarAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(0, 92, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportarActionPerformed

        //Creo el objeto JFileChooser
        JFileChooser fc = new JFileChooser();
        //Permitir seleccionar varios ficheros
        fc.setMultiSelectionEnabled(false);
        //Que se puede seleccionar
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        //Creo el filtro de extencion
        //String[] ext = new String[]{".txt",".exp"};
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("TXT - EXP", "txt","exp");
        //Le indio el filtro
        fc.setFileFilter(filtro);
        //Abrir la ventana y guardar la opcion seleccionada por el usuario
        int seleccion = fc.showOpenDialog(this);
        //Si el usuario acepta
        if(seleccion == JFileChooser.APPROVE_OPTION){
            try {
                //Seleccionamos los ficheros
                Import i = new Import(mongo,fc.getSelectedFile().getAbsolutePath());
                this.updateViewArco();
                this.updateViewNodos();
            } catch (IOException ex) {
                Logger.getLogger(CrearGrafo.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    }//GEN-LAST:event_ImportarActionPerformed

    private void ExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportarActionPerformed
        try{
            //
            JFileChooser fc = new JFileChooser();
            fc.showSaveDialog(this);
            File archivo = fc.getSelectedFile();
            if(archivo != null){
                Export e = new Export(mongo, archivo.getAbsolutePath());
                JOptionPane.showMessageDialog(null,
                    "El archivo se a guardado Exitosamente",
                    "Información",JOptionPane.INFORMATION_MESSAGE);
                }
        }
        catch(IOException ex){
            JOptionPane.showMessageDialog(null,
                "Su archivo NO se ha guardado",
                "Advertencia",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_ExportarActionPerformed

    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        try {
            new CrearGrafo().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(CrearGrafo.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_LimpiarActionPerformed

    private void SalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalirMouseClicked
        System.exit(0);
    }//GEN-LAST:event_SalirMouseClicked

    private void Salir2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Salir2MouseClicked
        System.exit(0);
    }//GEN-LAST:event_Salir2MouseClicked

    private void TemaCrearNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TemaCrearNodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TemaCrearNodoActionPerformed

    private void CrearNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearNodoActionPerformed
        Nodo newNodo = new Nodo(TemaCrearNodo.getText(),mongo);
        TemaCrearNodo.setText("");
        updateViewNodos();
        
    }//GEN-LAST:event_CrearNodoActionPerformed
    private void updateViewNodos(){
        ListaNodos.setText("");
        this.NameNodos.removeAllItems();
        this.NameNodos1.removeAllItems();
        this.NameNodos2.removeAllItems();
        this.addArcoNodo1.removeAllItems();
        this.addArcoNodo2.removeAllItems();
        
        ArrayList<Document> nodos = mongo.find("nodo");
        int i=0;
        if(nodos != null){
            for (Document nodo : nodos) {
                Object[] keys = nodo.keySet().toArray();
                String print = "";
                for(int j=1; j < keys.length;j++){
                    String k = (String) keys[j];
                    print = print + keys[j] + " : " +  nodo.getString(k) + " - ";
                    NameNodos.addItem(nodo.getString("nombre"));
                    NameNodos1.addItem(nodo.getString("nombre"));
                    NameNodos2.addItem(nodo.getString("nombre"));
                    addArcoNodo1.addItem(nodo.getString("nombre"));
                    addArcoNodo2.addItem(nodo.getString("nombre"));
                }      
                ListaNodos.append( print + "\n");
            }
        }
    }
    private void EliminarNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarNodoActionPerformed
        Nodo nodo = new Nodo(TemaEliminarNodo.getText(),mongo);
        nodo.dropNodo();
        updateViewNodos();
        updateViewArco();
        TemaEliminarNodo.setText("");
        
    }//GEN-LAST:event_EliminarNodoActionPerformed

    private void AgregarAtributoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarAtributoActionPerformed
        Nodo n = new Nodo((String)NameNodos.getSelectedItem(),mongo);
        n.agregarAtributo(AtributoAgregarAtributo.getText(), ValorAgregarAtributo.getText());
        updateViewNodos();
        
    }//GEN-LAST:event_AgregarAtributoActionPerformed

    private void EliminarAtributoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarAtributoActionPerformed
         Nodo n = new Nodo((String)NameNodos1.getSelectedItem(),mongo);
         n.eliminarAtributo(AtributoEliminarAtributo.getText());
        updateViewNodos();
    }//GEN-LAST:event_EliminarAtributoActionPerformed

    private void ActualizarAtributoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarAtributoActionPerformed
         Nodo n = new Nodo((String)NameNodos2.getSelectedItem(),mongo);
         n.modificarAtributo(AtributoActualizarAtributo.getText(), NuevoValorActualizarAtributo.getText());
         updateViewNodos();
    }//GEN-LAST:event_ActualizarAtributoActionPerformed
    
    
    private void updateViewArco(){
      
    
        ArrayList<Document> arcos = mongo.find("arco");
        ListaArcos.setText("");
        deleteArco.removeAllItems();
        addAttrArco.removeAllItems();
        deleteAttrArco.removeAllItems();
        updateAttrArco.removeAllItems();
        if(arcos != null){
            for (Document arco : arcos) {
                String d = arco.getString("origen") + "->" + arco.getString("destino");
                deleteArco.addItem(d);
                addAttrArco.addItem(d);
                deleteAttrArco.addItem(d);
                updateAttrArco.addItem(d);
                ListaArcos.append( d + "\n");
            }
        }
    }
    private void CrearArcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearArcoActionPerformed
        Nodo nOne = new Nodo((String)addArcoNodo1.getSelectedItem(),mongo);
        Nodo nTwo = new Nodo((String)addArcoNodo2.getSelectedItem(),mongo);
        Arco arco = new Arco(mongo);
        arco.agregarArco(nOne, nTwo); 
        updateViewArco();
        
    }//GEN-LAST:event_CrearArcoActionPerformed
    
    private void EliminarArcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarArcoActionPerformed
        String nodos = (String) this.deleteArco.getSelectedItem();
        
        Arco arco = new Arco(mongo);
        Nodo a = new Nodo(nodos.split("->")[0],mongo);
        Nodo b = new Nodo(nodos.split("->")[1],mongo);
        arco.agregarArco(a,b);
        arco.dropArco();
        updateViewArco();
    }//GEN-LAST:event_EliminarArcoActionPerformed

    private void AgregarAtributoArcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarAtributoArcoActionPerformed
        String nodos = (String) this.addAttrArco.getSelectedItem();
        
        Arco arco = new Arco(mongo);
        Nodo a = new Nodo(nodos.split("->")[0],mongo);
        Nodo b = new Nodo(nodos.split("->")[1],mongo);
        arco.agregarArco(a,b);
        arco.agregarAtributo(AtributoAgregarAtributoArco.getText(), ValorAgregarAtributoArco.getText());
        
    }//GEN-LAST:event_AgregarAtributoArcoActionPerformed

    private void EliminarAtributoArcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarAtributoArcoActionPerformed
        String nodos = (String) this.deleteAttrArco.getSelectedItem();
        
        Arco arco = new Arco(mongo);
        Nodo a = new Nodo(nodos.split("->")[0],mongo);
        Nodo b = new Nodo(nodos.split("->")[1],mongo);
        arco.agregarArco(a,b);
        arco.eliminarAtributo(AtributoEliminarAtributoArco.getText());
  
    }//GEN-LAST:event_EliminarAtributoArcoActionPerformed

    private void ActualizarAtributoArcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarAtributoArcoActionPerformed
        String nodos = (String) this.updateAttrArco.getSelectedItem();
        
        Arco arco = new Arco(mongo);
        Nodo a = new Nodo(nodos.split("->")[0],mongo);
        Nodo b = new Nodo(nodos.split("->")[1],mongo);
        arco.agregarArco(a,b);
        arco.modificarAtributo(AtributoActualizarAtributoArco.getText(), NuevoValorActualizarAtributoArco.getText());
    }//GEN-LAST:event_ActualizarAtributoArcoActionPerformed

    private void NameNodos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameNodos1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameNodos1ActionPerformed

    private void NameNodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameNodosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameNodosActionPerformed

    private void VerGrafoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerGrafoActionPerformed
       
    }//GEN-LAST:event_VerGrafoActionPerformed

    private void VerGrafoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VerGrafoMouseClicked
        try {
            Export e = new Export(mongo,"d:");
        } catch (IOException ex) {
            Logger.getLogger(CrearGrafo.class.getName()).log(Level.SEVERE, null, ex);
        }
        ShowPNG sp = new ShowPNG("D:\\GrafoExport.png");
        sp.setVisible(true);
    }//GEN-LAST:event_VerGrafoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearGrafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearGrafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearGrafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearGrafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CrearGrafo().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(CrearGrafo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActualizarAtributo;
    private javax.swing.JButton ActualizarAtributoArco;
    private javax.swing.JButton AgregarAtributo;
    private javax.swing.JButton AgregarAtributoArco;
    private javax.swing.JMenu Archivo;
    private javax.swing.JTextField AtributoActualizarAtributo;
    private javax.swing.JTextField AtributoActualizarAtributoArco;
    private javax.swing.JTextField AtributoAgregarAtributo;
    private javax.swing.JTextField AtributoAgregarAtributoArco;
    private javax.swing.JTextField AtributoEliminarAtributo;
    private javax.swing.JTextField AtributoEliminarAtributoArco;
    private javax.swing.JButton CrearArco;
    private javax.swing.JButton CrearNodo;
    private javax.swing.JButton EliminarArco;
    private javax.swing.JButton EliminarAtributo;
    private javax.swing.JButton EliminarAtributoArco;
    private javax.swing.JButton EliminarNodo;
    private javax.swing.JMenuItem Exportar;
    private javax.swing.JMenuItem Importar;
    private javax.swing.JMenuItem Limpiar;
    private javax.swing.JTextArea ListaArcos;
    private javax.swing.JTextArea ListaNodos;
    private javax.swing.JComboBox<String> NameNodos;
    private javax.swing.JComboBox<String> NameNodos1;
    private javax.swing.JComboBox<String> NameNodos2;
    private javax.swing.JTextField NuevoValorActualizarAtributo;
    private javax.swing.JTextField NuevoValorActualizarAtributoArco;
    private javax.swing.JMenuItem Salir;
    private javax.swing.JMenu Salir2;
    private javax.swing.JTextField TemaCrearNodo;
    private javax.swing.JTextField TemaEliminarNodo;
    private javax.swing.JTextField ValorAgregarAtributo;
    private javax.swing.JTextField ValorAgregarAtributoArco;
    private javax.swing.JMenu VerGrafo;
    private javax.swing.JComboBox<String> addArcoNodo1;
    private javax.swing.JComboBox<String> addArcoNodo2;
    private javax.swing.JComboBox<String> addAttrArco;
    private javax.swing.JComboBox<String> deleteArco;
    private javax.swing.JComboBox<String> deleteAttrArco;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JComboBox<String> updateAttrArco;
    // End of variables declaration//GEN-END:variables
}
